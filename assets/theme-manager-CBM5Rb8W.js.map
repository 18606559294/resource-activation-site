{"version":3,"file":"theme-manager-CBM5Rb8W.js","sources":["../../src/js/theme-manager.js"],"sourcesContent":["// 主题管理器\nclass ThemeManager {\n    /** @type {string[]} */\n    themes;\n    /** @type {string} */\n    currentTheme;\n    /** @type {boolean} */\n    isDark;\n\n    constructor() {\n        this.themes = [\n            'default',\n            'deep-blue',\n            'emerald',\n            'violet',\n            'orange',\n            'graphite',\n            'ocean',\n            'nature',\n            'sunset'\n        ];\n        \n        /** @type {string | null} */\n        const storedTheme = localStorage.getItem('theme');\n        this.currentTheme = storedTheme !== null ? storedTheme : 'default';\n        \n        /** @type {string | null} */\n        const storedDarkMode = localStorage.getItem('isDark');\n        this.isDark = storedDarkMode === 'true' || \n                      window.matchMedia('(prefers-color-scheme: dark)').matches;\n        \n        this.init();\n    }\n    \n    init() {\n        // 初始化主题\n        this.applyTheme(this.currentTheme);\n        this.applyDarkMode(this.isDark);\n        \n        // 添加主题切换器\n        this.createThemeSelector();\n        \n        // 监听系统主题变化\n        window.matchMedia('(prefers-color-scheme: dark)')\n            .addEventListener('change', \n                /** @param {MediaQueryListEvent} e */\n                e => this.applyDarkMode(e.matches)\n            );\n    }\n    \n    createThemeSelector() {\n        /** @type {HTMLElement | null} */\n        const navbar = document.querySelector('.navbar-container');\n        if (!navbar) {\n            console.error('Navbar container not found');\n            return;\n        }\n        \n        /** @type {HTMLDivElement} */\n        const themeSelector = document.createElement('div');\n        themeSelector.className = 'theme-selector';\n        \n        // 创建主题切换按钮\n        const themeButton = document.createElement('button');\n        themeButton.className = 'theme-toggle';\n        themeButton.setAttribute('aria-label', '切换主题');\n        themeButton.innerHTML = `\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"></path>\n            </svg>\n        `;\n        \n        // 创建主题下拉菜单\n        const themeMenu = document.createElement('div');\n        themeMenu.className = 'theme-menu';\n        \n        this.themes.forEach(theme => {\n            const themeOption = document.createElement('button');\n            themeOption.className = 'theme-option';\n            themeOption.setAttribute('data-theme', theme);\n            themeOption.textContent = this.getThemeName(theme);\n            themeOption.addEventListener('click', \n                /** @param {MouseEvent} event */\n                (event) => this.applyTheme(theme)\n            );\n            themeMenu.appendChild(themeOption);\n        });\n        \n        // 添加深色模式切换\n        const darkModeToggle = document.createElement('button');\n        darkModeToggle.className = 'dark-mode-toggle';\n        darkModeToggle.innerHTML = `\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n            </svg>\n        `;\n        darkModeToggle.addEventListener('click', \n            /** @param {MouseEvent} e */\n            () => this.toggleDarkMode()\n        );\n        \n        themeSelector.appendChild(themeButton);\n        themeSelector.appendChild(themeMenu);\n        themeSelector.appendChild(darkModeToggle);\n        \n        // 显示/隐藏主题菜单\n            themeButton.addEventListener('click', \n                /** @param {MouseEvent} event */\n                (event) => {\n                    themeMenu.classList.toggle('show');\n                }\n            );\n        \n        // 点击外部关闭菜单\n        document.addEventListener('click', \n            /** @param {MouseEvent} event */\n            (event) => {\n                if (!themeSelector.contains(/** @type {Node} */(event.target))) {\n                    themeMenu.classList.remove('show');\n                }\n            }\n        );\n        \n        navbar.appendChild(themeSelector);\n    }\n    \n    /**\n     * 应用主题\n     * @param {string} theme 主题名称\n     */\n    applyTheme(theme) {\n        // 添加切换动画\n        document.documentElement.classList.add('theme-transition');\n        \n        // 设置新主题\n        document.documentElement.setAttribute('data-theme', theme);\n        localStorage.setItem('theme', theme);\n        this.currentTheme = theme;\n        \n        // 更新选中状态\n        const options = document.querySelectorAll('.theme-option');\n        options.forEach(option => {\n            const btn = /** @type {HTMLButtonElement} */(option);\n            btn.classList.toggle('active', btn.dataset.theme === theme);\n            btn.setAttribute('aria-pressed', btn.dataset.theme === theme ? 'true' : 'false');\n        });\n        \n        // 移除动画\n        setTimeout(() => {\n            document.documentElement.classList.remove('theme-transition');\n        }, 300);\n    }\n    \n    /**\n     * 切换深色模式\n     * @returns {void}\n     */\n    toggleDarkMode() {\n        this.isDark = !this.isDark;\n        this.applyDarkMode(this.isDark);\n    }\n    \n    /**\n     * 应用深色模式\n     * @param {boolean} isDark 是否启用深色模式\n     * @returns {void}\n     */\n    applyDarkMode(isDark) {\n        document.documentElement.classList.toggle('dark', isDark);\n        localStorage.setItem('isDark', isDark);\n        this.isDark = isDark;\n    }\n    \n    /**\n     * 获取主题名称\n     * @param {string} theme 主题标识符\n     * @returns {string} 主题显示名称\n     */\n    getThemeName(theme) {\n        const names = {\n            'default': '默认蓝',\n            'deep-blue': '深邃蓝',\n            'emerald': '翡翠绿',\n            'violet': '紫罗兰',\n            'orange': '橙色活力',\n            'graphite': '石墨灰',\n            'ocean': '海洋',\n            'nature': '自然',\n            'sunset': '日落'\n        };\n        return names[theme] || theme;\n    }\n}\n\n/**\n * @typedef {Object} Window\n * @property {ThemeManager} themeManager\n */\n\n/**\n * @typedef {Object} Storage\n * @property {(key: string) => string | null} getItem\n * @property {(key: string, value: string) => void} setItem\n */\n\n// 初始化主题管理器\ndocument.addEventListener('DOMContentLoaded', () => {\n    /** @type {ThemeManager} */\n    window.themeManager = new ThemeManager();\n});\n"],"names":["ThemeManager","constructor","__publicField","this","themes","storedTheme","localStorage","getItem","currentTheme","storedDarkMode","isDark","window","matchMedia","matches","init","applyTheme","applyDarkMode","createThemeSelector","addEventListener","e","navbar","document","querySelector","console","error","themeSelector","createElement","className","themeButton","setAttribute","innerHTML","themeMenu","forEach","theme","themeOption","textContent","getThemeName","event","appendChild","darkModeToggle","toggleDarkMode","classList","toggle","contains","target","remove","documentElement","add","setItem","querySelectorAll","option","btn","dataset","setTimeout","default","emerald","violet","orange","graphite","ocean","nature","sunset","themeManager"],"mappings":"0JACA,MAAMA,EAQF,WAAAC,GANAC,EAAAC,KAAA,UAEAD,EAAAC,KAAA,gBAEAD,EAAAC,KAAA,UAGIA,KAAKC,OAAS,CACV,UACA,YACA,UACA,SACA,SACA,WACA,QACA,SACA,UAIE,MAAAC,EAAcC,aAAaC,QAAQ,SACpCJ,KAAAK,aAA+B,OAAhBH,EAAuBA,EAAc,UAGnD,MAAAI,EAAiBH,aAAaC,QAAQ,UAC5CJ,KAAKO,OAA4B,SAAnBD,GACAE,OAAOC,WAAW,gCAAgCC,QAEhEV,KAAKW,MACb,CAEI,IAAAA,GAESX,KAAAY,WAAWZ,KAAKK,cAChBL,KAAAa,cAAcb,KAAKO,QAGxBP,KAAKc,sBAGEN,OAAAC,WAAW,gCACbM,iBAAiB,UAETC,GAAAhB,KAAKa,cAAcG,EAAEN,UAE1C,CAEI,mBAAAI,GAEU,MAAAG,EAASC,SAASC,cAAc,qBACtC,IAAKF,EAED,YADAG,QAAQC,MAAM,8BAKZ,MAAAC,EAAgBJ,SAASK,cAAc,OAC7CD,EAAcE,UAAY,iBAGpB,MAAAC,EAAcP,SAASK,cAAc,UAC3CE,EAAYD,UAAY,eACZC,EAAAC,aAAa,aAAc,QACvCD,EAAYE,UAAY,iWAQlB,MAAAC,EAAYV,SAASK,cAAc,OACzCK,EAAUJ,UAAY,aAEjBxB,KAAAC,OAAO4B,SAAiBC,IACnB,MAAAC,EAAcb,SAASK,cAAc,UAC3CQ,EAAYP,UAAY,eACZO,EAAAL,aAAa,aAAcI,GAC3BC,EAAAC,YAAchC,KAAKiC,aAAaH,GAChCC,EAAAhB,iBAAiB,SAExBmB,GAAUlC,KAAKY,WAAWkB,KAE/BF,EAAUO,YAAYJ,EAAW,IAI/B,MAAAK,EAAiBlB,SAASK,cAAc,UAC9Ca,EAAeZ,UAAY,mBAC3BY,EAAeT,UAAY,qOAKZS,EAAArB,iBAAiB,SAE5B,IAAMf,KAAKqC,mBAGff,EAAca,YAAYV,GAC1BH,EAAca,YAAYP,GAC1BN,EAAca,YAAYC,GAGVX,EAAAV,iBAAiB,SAExBmB,IACaN,EAAAU,UAAUC,OAAO,OAAM,IAKpCrB,SAAAH,iBAAiB,SAErBmB,IACQZ,EAAckB,SAA6BN,EAAMO,SACxCb,EAAAU,UAAUI,OAAO,OAC/C,IAIQzB,EAAOkB,YAAYb,EAC3B,CAMI,UAAAV,CAAWkB,GAEEZ,SAAAyB,gBAAgBL,UAAUM,IAAI,oBAG9B1B,SAAAyB,gBAAgBjB,aAAa,aAAcI,GACvC3B,aAAA0C,QAAQ,QAASf,GAC9B9B,KAAKK,aAAeyB,EAGJZ,SAAS4B,iBAAiB,iBAClCjB,SAAkBkB,IAChB,MAAAC,EAAA,EACNA,EAAIV,UAAUC,OAAO,SAAUS,EAAIC,QAAQnB,QAAUA,GACrDkB,EAAItB,aAAa,eAAgBsB,EAAIC,QAAQnB,QAAUA,EAAQ,OAAS,QAAO,IAInFoB,YAAW,KACEhC,SAAAyB,gBAAgBL,UAAUI,OAAO,mBAAkB,GAC7D,IACX,CAMI,cAAAL,GACSrC,KAAAO,QAAUP,KAAKO,OACfP,KAAAa,cAAcb,KAAKO,OAChC,CAOI,aAAAM,CAAcN,GACVW,SAASyB,gBAAgBL,UAAUC,OAAO,OAAQhC,GACrCJ,aAAA0C,QAAQ,SAAUtC,GAC/BP,KAAKO,OAASA,CACtB,CAOI,YAAA0B,CAAaH,GAYF,MAXO,CACVqB,QAAW,MACX,YAAa,MACbC,QAAW,MACXC,OAAU,MACVC,OAAU,OACVC,SAAY,MACZC,MAAS,KACTC,OAAU,KACVC,OAAU,MAED5B,IAAUA,CAC/B,EAeAZ,SAASH,iBAAiB,oBAAoB,KAEnCP,OAAAmD,aAAe,IAAI9D,CAAc"}