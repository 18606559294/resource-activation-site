{"version":3,"mappings":";iHAEA,MAAMA,EACF,WAAAC,GACIC,KAAKC,aAAe,CAChB,SAAU,CAAEC,OAAQ,QACpB,aAAc,CAAEA,OAAQ,YACxB,YAAa,CAAEA,OAAQ,cAEnC,CAEI,IAAAC,GAESC,OAAOC,WAMLC,OAAAC,QAAQP,KAAKC,cAAcO,SAAQ,EAAEC,EAAaC,MAC/C,MAAAC,EAAYC,SAASC,eAAeJ,GACtCE,GACAP,OAAOC,UAAUS,SAAS,SAAUH,EAAWD,EAC/D,IAIQV,KAAKe,0BAbDC,QAAQC,MAAM,uBAc1B,CAEI,sBAAAF,GACqB,IAAIG,kBAAkBC,IACzBA,EAAAX,SAASY,IACNA,EAAAC,WAAWb,SAASc,IACrB,GAAAA,EAAKC,WAAaC,KAAKC,cACvBH,EAAKI,UAAUC,SAAS,gBAAiB,CACzC,MAAMlB,EAAca,EAAKM,GACrB5B,KAAKC,aAAaQ,IAClBL,OAAOC,UAAUS,SACb,SACAQ,EACAtB,KAAKC,aAAaQ,GAGlD,IACiB,GACJ,IAGIoB,QAAQjB,SAASkB,KAAM,CAC5BC,WAAW,EACXC,SAAS,GAErB,EAIApB,SAASqB,iBAAiB,oBAAoBC,UAEtC,IAAC9B,OAAOC,UACJ,IACA,MAAQ8B,QAASC,6CAAoBC,OAAO,4BAAkBC,MAAAC,KAAAC,IAAA,OAAAL,QAAAC,EAAA,GAAAK,wBACvDrC,OAAAC,UAAY,IAAI+B,QACjBhC,OAAOC,UAAUF,MAC1B,OAAQc,GAEL,YADQD,QAAAC,MAAM,aAAcA,EAExC,EAG0B,IAAInB,GACZK,MAAM,ICtEhBS,SAASqB,iBAAiB,oBAAoB,YAG1CI,OAAO,4CAAmCI,wBAACH,MAAeI,IAElCA,EAAOP,QAEfQ,aAAY,KAEpBC,YAAW,KACEhC,SAAAiC,gBAAgBC,gBAAgB,qBAChClC,SAAAiC,gBAAgBnB,UAAUqB,OAAO,oBAAmB,GAC9D,IAAG,GACT,IACFC,OAAe/B,IACND,QAAAC,MAAM,cAAeA,GACpBL,SAAAiC,gBAAgBC,gBAAgB,qBAChClC,SAAAiC,gBAAgBnB,UAAUqB,OAAO,oBAAmB,IAIxDnC,SAAAiC,gBAAgBnB,UAAUuB,IAAI,oBAAmB","names":["AdInitializer","constructor","this","adContainers","format","init","window","adManager","Object","entries","forEach","containerId","config","container","document","getElementById","createAd","observeNewAdContainers","console","error","MutationObserver","mutations","mutation","addedNodes","node","nodeType","Node","ELEMENT_NODE","classList","contains","id","observe","body","childList","subtree","addEventListener","async","default","AdManager","import","then","n","b","__VITE_PRELOAD__","module","addObserver","setTimeout","documentElement","removeAttribute","remove","catch","add"],"ignoreList":[],"sources":["../../src/js/ad-init.js","../../index.html?html-proxy&index=6.js"],"sourcesContent":["// 广告初始化模块\n\nclass AdInitializer {\n    constructor() {\n        this.adContainers = {\n            'top-ad': { format: 'auto' },\n            'sidebar-ad': { format: 'vertical' },\n            'bottom-ad': { format: 'horizontal' }\n        };\n    }\n\n    init() {\n        // 确保广告管理器已加载\n        if (!window.adManager) {\n            console.error('Ad manager not found');\n            return;\n        }\n\n        // 初始化所有广告容器\n        Object.entries(this.adContainers).forEach(([containerId, config]) => {\n            const container = document.getElementById(containerId);\n            if (container) {\n                window.adManager.createAd('google', container, config);\n            }\n        });\n\n        // 监听动态加载的广告容器\n        this.observeNewAdContainers();\n    }\n\n    observeNewAdContainers() {\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                mutation.addedNodes.forEach((node) => {\n                    if (node.nodeType === Node.ELEMENT_NODE && \n                        node.classList.contains('ad-container')) {\n                        const containerId = node.id;\n                        if (this.adContainers[containerId]) {\n                            window.adManager.createAd(\n                                'google',\n                                node,\n                                this.adContainers[containerId]\n                            );\n                        }\n                    }\n                });\n            });\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n    }\n}\n\n// 在DOM加载完成后初始化广告\ndocument.addEventListener('DOMContentLoaded', async () => {\n    // 确保广告管理器已加载\n    if (!window.adManager) {\n        try {\n            const { default: AdManager } = await import('./ad-manager.js');\n            window.adManager = new AdManager();\n            await window.adManager.init();\n        } catch (error) {\n            console.error('广告管理器加载失败:', error);\n            return;\n        }\n    }\n\n    const adInitializer = new AdInitializer();\n    adInitializer.init();\n});","\n        document.addEventListener('DOMContentLoaded', () => {\n\n            // 初始化国际化管理器\n            import('./src/js/modules/i18n-manager.js').then(module => {\n                // 使用导入的单例实例，而不是创建新实例\n                const i18nManager = module.default;\n                // 添加观察者，在国际化加载完成后移除加载状态\n                i18nManager.addObserver(() => {\n                    // 使用延迟移除加载状态\n                    setTimeout(() => {\n                        document.documentElement.removeAttribute('data-i18n-loading');\n                        document.documentElement.classList.remove('i18n-initializing');\n                    }, 300);\n                });\n            }).catch(error => {\n                console.error('国际化管理器加载失败:', error);\n                document.documentElement.removeAttribute('data-i18n-loading');\n                document.documentElement.classList.remove('i18n-initializing');\n            });\n\n            // 添加页面加载状态管理\n            document.documentElement.classList.add('i18n-initializing');\n        });\n    "],"file":"assets/main-CCDUDHfn.js"}