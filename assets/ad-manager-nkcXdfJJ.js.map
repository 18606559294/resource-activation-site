{"version":3,"mappings":"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","names":["DeepSeekAPI","constructor","apiKey","Error","this","apiEndpoint","model","sendChatRequest","messages","Array","isArray","length","response","fetch","method","headers","Authorization","body","JSON","stringify","temperature","max_tokens","ok","errorData","json","catch","status","_a","error","message","statusText","console","chat","userMessage","history","role","content","choices","setApiKey","setModel","CryptoUtils","encrypt","plaintext","passphrase","keyMaterial","_getKeyMaterial","key","_deriveKey","iv","crypto","getRandomValues","Uint8Array","encodedData","TextEncoder","encode","encryptedContent","subtle","name","encryptedArray","byteLength","set","btoa","String","fromCharCode","apply","decrypt","encryptedData","atob","split","map","char","charCodeAt","slice","decryptedContent","TextDecoder","decode","encoder","importKey","salt","deriveKey","iterations","hash","generateSecurePassword","charset","randomValues","result","i","translations","en","title","zh","currentLanguage","localStorage","getItem","navigator","language","userLanguage","startsWith","updateContent","document","documentElement","lang","querySelectorAll","forEach","element","getAttribute","textContent","placeholder","innerHTML","i18n","switchLanguage","setItem","t","fallback","DeepSeekChatWidget","api","chatHistory","isOpen","isInitialized","encryptionKey","createWidgetElements","initialize","encryptedApiKey","window","ENV","DEEPSEEK_API_KEY_ENCRYPTED","apiKeysConfig","import","__VITE_PRELOAD__","default","ENCRYPTION_KEY","DeepSeekIntegration","__vitePreload","async","then","n","d","Promise","resolve","setTimeout","log","showError","container","createElement","className","style","left","top","right","bottom","chatButton","setAttribute","chatWindow","display","header","closeButton","appendChild","messagesContainer","welcomeMessage","inputArea","messageInput","rows","sendButton","addEventListener","toggleChat","sendMessage","e","shiftKey","preventDefault","height","scrollHeight","force","focus","scrollToBottom","value","trim","addMessage","loadingId","showLoading","removeLoading","push","messageElement","replace","id","Date","now","loadingElement","getElementById","remove","errorElement","classList","add","scrollTop","I18nManager","i18nManager","observers","Set","fallbackLanguage","loadedLanguages","dateTimeFormatter","Intl","DateTimeFormat","isInitializing","initializationPromise","showDefaultContent","readyState","init","hasAttribute","warn","handleInitTimeout","defaultText","tagName","visibility","fallbackToDefault","removeAttribute","savedLang","systemLang","getSystemLanguage","initialLang","all","loadLanguage","size","targetLang","has","setLanguage","initSystemLanguageDetection","current","loaded","from","toLowerCase","languagechange","newLang","attempt","backupResponse","updateAllTranslations","notifyObservers","translation","translate","keys","k","addObserver","observer","removeObserver","delete","uiFeedback","toastContainer","createToastContainer","loadingOverlay","createLoadingOverlay","overlay","showToast","type","duration","toast","getToastIcon","requestAnimationFrame","removeChild","icons","success","warning","info","querySelector","overflow","hideLoading","showConfirm","options","dialog","cancelText","confirmText","action","target","dataset","showProgress","progress","fill","text","currentProgress","targetProgress","startTime","performance","animate","currentTime","elapsed","Math","min","width","round","buttons","Map","button","updateButtonStates","bind","setupKeyboardNavigation","isSystemChange","get","btn","disabled","currentLang","isActive","toString","toggle","labelKey","ariaLabel","buttonText","toUpperCase","values","currentIndex","event","adManager","platforms","google","baidu","alimama","jd","pdd","stats","impressions","clicks","revenue","retryAttempts","retryDelay","loadSDKs","initTracking","loadStats","setupErrorHandling","includes","handleAdError","loadScript","src","crossOrigin","config","reject","script","onload","onerror","head","platform","sendTrackingData","timestamp","getTime","trackImpression","position","saveStats","trackClick","data","url","location","href","userAgent","queueFailedTrackingData","queue","parse","retryFailedTracking","retryData","shift","savedStats","createGoogleAd","format","ins","adClient","adFormat","fullWidthResponsive","adsbygoogle","tryAlternativeAd","createBaiduAd","createAd","measureAdPerformance","containerId","PerformanceObserver","list","getEntries","entry","loadTime","observe","entryTypes","disconnect"],"ignoreList":[],"sources":["../../src/js/modules/deepseek-api.js","../../src/js/modules/crypto-utils.js","../../src/i18n.js","../../src/js/modules/deepseek-chat-widget.js","../../src/js/modules/i18n-manager.js","../../src/js/modules/ui-feedback.js","../../src/js/components/language-switcher.js","../../src/js/ad-manager.js"],"sourcesContent":["/**\n * DeepSeek API 集成模块\n * 提供与DeepSeek API的通信功能\n */\n\nclass DeepSeekAPI {\n    constructor(apiKey) {\n        if (!apiKey) {\n            throw new Error('API密钥不能为空');\n        }\n        this.apiKey = apiKey;\n        this.apiEndpoint = 'https://api.deepseek.com/v1/chat/completions';\n        this.model = 'deepseek-chat';\n    }\n\n    /**\n     * 发送聊天请求到DeepSeek API\n     * @param {Array} messages 消息历史\n     * @returns {Promise<Object>} API响应\n     */\n    async sendChatRequest(messages) {\n        if (!messages || !Array.isArray(messages) || messages.length === 0) {\n            throw new Error('消息不能为空');\n        }\n\n        try {\n            const response = await fetch(this.apiEndpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.apiKey}`\n                },\n                body: JSON.stringify({\n                    model: this.model,\n                    messages: messages,\n                    temperature: 0.7,\n                    max_tokens: 1000\n                })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json().catch(() => ({}));\n                throw new Error(`API请求失败: ${response.status} ${errorData.error?.message || response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('DeepSeek API请求失败:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * 简化的聊天请求方法\n     * @param {string} userMessage 用户消息\n     * @param {Array} history 历史消息\n     * @returns {Promise<string>} 助手回复\n     */\n    async chat(userMessage, history = []) {\n        if (!userMessage) {\n            throw new Error('用户消息不能为空');\n        }\n\n        // 格式化历史记录和当前消息\n        const messages = [\n            ...history,\n            { role: 'user', content: userMessage }\n        ];\n\n        try {\n            const response = await this.sendChatRequest(messages);\n            \n            if (response.choices && response.choices.length > 0) {\n                return response.choices[0].message.content;\n            }\n            \n            throw new Error('API响应格式不正确');\n        } catch (error) {\n            console.error('聊天请求失败:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * 设置API密钥\n     * @param {string} apiKey 新的API密钥\n     */\n    setApiKey(apiKey) {\n        if (!apiKey) {\n            throw new Error('API密钥不能为空');\n        }\n        this.apiKey = apiKey;\n    }\n\n    /**\n     * 设置模型\n     * @param {string} model 模型名称\n     */\n    setModel(model) {\n        if (!model) {\n            throw new Error('模型名称不能为空');\n        }\n        this.model = model;\n    }\n}\n\nexport default DeepSeekAPI;","/**\n * 加密工具模块 - 用于API密钥等敏感信息的加密和解密\n */\n\nclass CryptoUtils {\n    /**\n     * 使用AES-GCM算法加密数据\n     * @param {string} plaintext - 要加密的文本\n     * @param {string} passphrase - 加密密码\n     * @returns {Promise<string>} - 返回加密后的字符串\n     */\n    static async encrypt(plaintext, passphrase) {\n        try {\n            // 从密码生成密钥\n            const keyMaterial = await this._getKeyMaterial(passphrase);\n            const key = await this._deriveKey(keyMaterial);\n            \n            // 创建初始化向量\n            const iv = crypto.getRandomValues(new Uint8Array(12));\n            \n            // 加密数据\n            const encoder = new TextEncoder();\n            const encodedData = encoder.encode(plaintext);\n            \n            const encryptedContent = await crypto.subtle.encrypt(\n                {\n                    name: \"AES-GCM\",\n                    iv\n                },\n                key,\n                encodedData\n            );\n            \n            // 将IV和加密内容合并并转换为Base64\n            const encryptedArray = new Uint8Array(iv.length + encryptedContent.byteLength);\n            encryptedArray.set(iv);\n            encryptedArray.set(new Uint8Array(encryptedContent), iv.length);\n            \n            return btoa(String.fromCharCode.apply(null, encryptedArray));\n        } catch (error) {\n            console.error('加密失败:', error);\n            throw new Error('加密操作失败');\n        }\n    }\n    \n    /**\n     * 解密AES-GCM加密的数据\n     * @param {string} encryptedData - 加密的数据字符串\n     * @param {string} passphrase - 解密密码\n     * @returns {Promise<string>} - 返回解密后的文本\n     */\n    static async decrypt(encryptedData, passphrase) {\n        try {\n            // 从Base64转换回二进制数据\n            const encryptedArray = new Uint8Array(\n                atob(encryptedData).split('').map(char => char.charCodeAt(0))\n            );\n            \n            // 提取IV和加密内容\n            const iv = encryptedArray.slice(0, 12);\n            const encryptedContent = encryptedArray.slice(12);\n            \n            // 从密码生成密钥\n            const keyMaterial = await this._getKeyMaterial(passphrase);\n            const key = await this._deriveKey(keyMaterial);\n            \n            // 解密数据\n            const decryptedContent = await crypto.subtle.decrypt(\n                {\n                    name: \"AES-GCM\",\n                    iv\n                },\n                key,\n                encryptedContent\n            );\n            \n            // 转换为文本\n            const decoder = new TextDecoder();\n            return decoder.decode(decryptedContent);\n        } catch (error) {\n            console.error('解密失败:', error);\n            throw new Error('解密操作失败');\n        }\n    }\n    \n    /**\n     * 从密码生成密钥材料\n     * @private\n     */\n    static async _getKeyMaterial(passphrase) {\n        const encoder = new TextEncoder();\n        return await crypto.subtle.importKey(\n            \"raw\",\n            encoder.encode(passphrase),\n            { name: \"PBKDF2\" },\n            false,\n            [\"deriveBits\", \"deriveKey\"]\n        );\n    }\n    \n    /**\n     * 从密钥材料派生加密密钥\n     * @private\n     */\n    static async _deriveKey(keyMaterial) {\n        // 使用固定的盐值（在生产环境中应该使用随机盐值并存储）\n        const salt = new TextEncoder().encode(\"resource-activation-site-salt\");\n        \n        return await crypto.subtle.deriveKey(\n            {\n                name: \"PBKDF2\",\n                salt,\n                iterations: 100000,\n                hash: \"SHA-256\"\n            },\n            keyMaterial,\n            { name: \"AES-GCM\", length: 256 },\n            false,\n            [\"encrypt\", \"decrypt\"]\n        );\n    }\n    \n    /**\n     * 生成安全的随机密码\n     * @param {number} length - 密码长度\n     * @returns {string} - 生成的随机密码\n     */\n    static generateSecurePassword(length = 16) {\n        const charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\";\n        const randomValues = new Uint8Array(length);\n        crypto.getRandomValues(randomValues);\n        \n        let result = \"\";\n        for (let i = 0; i < length; i++) {\n            result += charset[randomValues[i] % charset.length];\n        }\n        \n        return result;\n    }\n}\n\nexport default CryptoUtils;","const translations = {\n    en: {\n        // 主页翻译\n        \"title\": \"Resource Collection and Activation Tools\",\n        \"card1.title\": \"Active Management of Activation Tools\",\n        \"card1.description\": \"This position provides management and updates for activation tools, responding promptly to user needs for updated resources, ensuring compatibility across different Windows versions.\",\n        \"card2.title\": \"User Feedback and Problem Resolution\",\n        \"card2.description\": \"Users often leave comments about activation issues and other concerns. Site management provides immediate comprehensive solutions, creating an interactive and supportive community.\",\n        \"card3.title\": \"Resource Security Considerations\",\n        \"card3.description\": \"The platform emphasizes security, ensuring all shared resources are tested for viruses and malware, and alerts users to potential conflicts with built-in security software.\",\n        \"card4.title\": \"Dynamic Resource Links and User Accessibility\",\n        \"card4.description\": \"Users can easily browse the resource platform through public links and quickly access updated resources, enhancing user experience and convenience.\",\n\n        // 反馈页面翻译\n        \"feedback.title\": \"Feedback and Solutions\",\n        \"feedback.header\": \"Problem Feedback\",\n        \"feedback.placeholder\": \"Please describe the issue you encountered...\",\n        \"feedback.submit\": \"Submit Feedback\",\n        \"feedback.history\": \"History Issues\",\n        \"feedback.back\": \"Back to Home\",\n        \"feedback.recommended\": \"Recommended Tools\",\n        \"feedback.status.success\": \"Feedback submitted successfully!\",\n        \"feedback.status.error\": \"Error submitting feedback. Please try again.\",\n\n        // 安全页面翻译\n        \"security.title\": \"Internet Security Tips\",\n        \"security.header\": \"Internet Security Tips\",\n        \"security.back\": \"Back to Home\",\n        \n        \"security.password.title\": \"Password Security\",\n        \"security.password.description\": \"Learn how to create and manage strong passwords to protect your accounts.\",\n        \"security.password.modal.title\": \"Detailed Password Security Guide\",\n        \"security.password.modal.content\": `\n            <h3>Password Best Practices:</h3>\n            <ul>\n                <li>Use at least 12 characters</li>\n                <li>Include numbers, symbols, and both upper and lowercase letters</li>\n                <li>Avoid using personal information</li>\n                <li>Don't use keyboard patterns or common phrases</li>\n                <li>Use different passwords for different accounts</li>\n                <li>Change passwords regularly (every 3 months recommended)</li>\n                <li>Use a password manager</li>\n                <li>Enable two-factor authentication when available</li>\n            </ul>\n        `,\n\n        \"security.antivirus.title\": \"Antivirus Protection\",\n        \"security.antivirus.description\": \"Learn how to protect your devices from viruses and malware.\",\n        \"security.antivirus.modal.title\": \"Antivirus Protection Guide\",\n        \"security.antivirus.modal.content\": `\n            <h3>Antivirus Protection Tips:</h3>\n            <ul>\n                <li>Install reputable antivirus software</li>\n                <li>Keep your antivirus updated</li>\n                <li>Run regular system scans</li>\n                <li>Be careful when downloading files</li>\n                <li>Don't open suspicious email attachments</li>\n                <li>Keep your operating system updated</li>\n                <li>Use a firewall</li>\n                <li>Back up important files regularly</li>\n            </ul>\n        `,\n\n        \"security.privacy.title\": \"Privacy Protection\",\n        \"security.privacy.description\": \"Important tips for protecting your personal information and online privacy.\",\n        \"security.privacy.modal.title\": \"Privacy Protection Guide\",\n        \"security.privacy.modal.content\": `\n            <h3>Privacy Protection Measures:</h3>\n            <ul>\n                <li>Be careful what you share on social media</li>\n                <li>Regularly check privacy settings</li>\n                <li>Use a VPN when necessary</li>\n                <li>Clear browsing history and cookies regularly</li>\n                <li>Use private browsing mode</li>\n                <li>Disable unnecessary location services</li>\n                <li>Be careful with third-party app permissions</li>\n                <li>Monitor account login history</li>\n            </ul>\n        `,\n\n        \"security.update.title\": \"System Updates\",\n        \"security.update.description\": \"Keep your system and software updated for optimal security.\",\n        \"security.update.modal.title\": \"System Update Guide\",\n        \"security.update.modal.content\": `\n            <h3>Update Guidelines:</h3>\n            <ul>\n                <li>Enable automatic updates</li>\n                <li>Check for updates regularly</li>\n                <li>Update all software, not just the operating system</li>\n                <li>Back up your data before major updates</li>\n                <li>Only download updates from official sources</li>\n            </ul>\n        `,\n\n        // 状态页面翻译\n        \"status.title\": \"System Status Monitor\",\n        \"status.server\": \"Server Status\",\n        \"status.checking\": \"Checking...\",\n        \"status.connected\": \"Connected Clients: \",\n        \"status.uptime\": \"Uptime: \",\n        \"status.updates\": \"Recent Updates\",\n        \"status.online\": \"Online\",\n        \"status.offline\": \"Offline\",\n\n        // DeepSeek客服相关翻译\n        \"deepseek.logs.initialized\": \"DeepSeek chat widget initialized\",\n        \"deepseek.logs.initFailed\": \"Failed to initialize DeepSeek chat widget:\",\n        \"deepseek.errors.initFailed\": \"Chat system initialization failed, please try again later\",\n        \"deepseek.openChat\": \"Open customer service chat\",\n        \"deepseek.closeChat\": \"Close chat window\",\n        \"deepseek.title\": \"Online Customer Service\"\n    },\n    zh: {\n        // 主页翻译\n        \"title\": \"资源收集和激活工具更新\",\n        \"card1.title\": \"激活工具的主动管理\",\n        \"card1.description\": \"该岗位提供管理和更新激活工具，及时响应用户对更新资源的需求，确保不同 Windows 版本的兼容可访问性。\",\n        \"card2.title\": \"用户反馈和问题解决\",\n        \"card2.description\": \"用户经常会留下有关激活问题和其他疑虑的评论，网站管理会立即提供完善的解决方案，从而创建一个互动且相互支持的社区。\",\n        \"card3.title\": \"资源安全注意事项\",\n        \"card3.description\": \"该平台强调安全性，确保所有共享资源都经过病毒和恶意软件测试，并提醒用户注意可能干扰内置安全软件的潜在冲突。\",\n        \"card4.title\": \"动态资源链接和用户可访问性\",\n        \"card4.description\": \"用户可以通过公共链接轻松浏览资源平台，快速访问已更新的资源，从而增强用户体验和便利性。\",\n\n        // 反馈页面翻译\n        \"feedback.title\": \"问题反馈与解决\",\n        \"feedback.header\": \"问题反馈\",\n        \"feedback.placeholder\": \"请描述您遇到的问题...\",\n        \"feedback.submit\": \"提交反馈\",\n        \"feedback.history\": \"历史问题\",\n        \"feedback.back\": \"返回主页\",\n        \"feedback.recommended\": \"推荐工具\",\n        \"feedback.status.success\": \"反馈提交成功！\",\n        \"feedback.status.error\": \"提交反馈失败，请重试。\",\n\n        // 安全页面翻译\n        \"security.title\": \"互联网安全提示\",\n        \"security.header\": \"互联网安全提示\",\n        \"security.back\": \"返回主页\",\n        \n        \"security.password.title\": \"密码安全\",\n        \"security.password.description\": \"了解如何创建和管理强密码来保护您的账户。\",\n        \"security.password.modal.title\": \"密码安全详细指南\",\n        \"security.password.modal.content\": `\n            <h3>创建强密码的原则：</h3>\n            <ul>\n                <li>使用至少12个字符的密码</li>\n                <li>混合使用大小写字母、数字和特殊符号</li>\n                <li>避免使用个人信息（生日、姓名等）</li>\n                <li>不要使用键盘规律或常见词组</li>\n                <li>为不同账户使用不同密码</li>\n                <li>定期更换密码（建议每3个月）</li>\n                <li>使用密码管理器</li>\n                <li>开启双因素认证（如果可用）</li>\n            </ul>\n        `,\n\n        \"security.antivirus.title\": \"病毒防护\",\n        \"security.antivirus.description\": \"了解如何保护您的设备免受病毒和恶意软件的侵害。\",\n        \"security.antivirus.modal.title\": \"病毒防护指南\",\n        \"security.antivirus.modal.content\": `\n            <h3>病毒防护要点：</h3>\n            <ul>\n                <li>安装可靠的防病毒软件</li>\n                <li>保持防病毒软件更新</li>\n                <li>定期进行系统扫描</li>\n                <li>下载文件时要谨慎</li>\n                <li>不要打开可疑的邮件附件</li>\n                <li>及时更新操作系统</li>\n                <li>使用防火墙</li>\n                <li>定期备份重要文件</li>\n            </ul>\n        `,\n\n        \"security.privacy.title\": \"隐私保护\",\n        \"security.privacy.description\": \"保护您的个人信息和在线隐私的重要提示。\",\n        \"security.privacy.modal.title\": \"隐私保护指南\",\n        \"security.privacy.modal.content\": `\n            <h3>保护个人隐私的措施：</h3>\n            <ul>\n                <li>谨慎分享个人信息在社交媒体</li>\n                <li>定期检查隐私设置</li>\n                <li>必要时使用VPN</li>\n                <li>定期清理浏览记录和Cookie</li>\n                <li>使用隐私浏览模式</li>\n                <li>关闭不必要的位置服务</li>\n                <li>谨慎使用第三方应用授权</li>\n                <li>监控账户登录记录</li>\n            </ul>\n        `,\n\n        \"security.update.title\": \"系统更新\",\n        \"security.update.description\": \"保持系统和软件更新以确保最佳安全性。\",\n        \"security.update.modal.title\": \"系统更新指南\",\n        \"security.update.modal.content\": `\n            <h3>更新指南：</h3>\n            <ul>\n                <li>启用自动更新</li>\n                <li>定期检查更新</li>\n                <li>更新所有软件，不仅是操作系统</li>\n                <li>重要更新前备份数据</li>\n                <li>仅从官方源下载更新</li>\n            </ul>\n        `,\n\n        // 状态页面翻译\n        \"status.title\": \"系统状态监控\",\n        \"status.server\": \"服务器状态\",\n        \"status.checking\": \"检查中...\",\n        \"status.connected\": \"已连接客户端: \",\n        \"status.uptime\": \"运行时间: \",\n        \"status.updates\": \"最近更新\",\n        \"status.online\": \"在线\",\n        \"status.offline\": \"离线\",\n\n        // DeepSeek客服相关翻译\n        \"deepseek.logs.initialized\": \"DeepSeek客服聊天窗口已加载\",\n        \"deepseek.logs.initFailed\": \"初始化DeepSeek客服聊天窗口失败:\",\n        \"deepseek.errors.initFailed\": \"客服系统初始化失败，请稍后再试\",\n        \"deepseek.openChat\": \"打开客服聊天\",\n        \"deepseek.closeChat\": \"关闭聊天窗口\",\n        \"deepseek.title\": \"在线客服\"\n    }\n};\n\n// 获取浏览器语言\nfunction getBrowserLanguage() {\n    const language = navigator.language || navigator.userLanguage;\n    return language.startsWith('zh') ? 'zh' : 'en';\n}\n\n// 初始化语言\nlet currentLanguage = localStorage.getItem('language') || getBrowserLanguage();\n\n// 更新页面文本\nfunction updateContent() {\n    document.documentElement.lang = currentLanguage;\n    const elements = document.querySelectorAll('[data-i18n]');\n    elements.forEach(element => {\n        const key = element.getAttribute('data-i18n');\n        if (translations[currentLanguage][key]) {\n            element.textContent = translations[currentLanguage][key];\n        }\n    });\n\n    // 更新 placeholder\n    const placeholderElements = document.querySelectorAll('[data-i18n-placeholder]');\n    placeholderElements.forEach(element => {\n        const key = element.getAttribute('data-i18n-placeholder');\n        if (translations[currentLanguage][key]) {\n            element.placeholder = translations[currentLanguage][key];\n        }\n    });\n    \n    // 更新HTML内容\n    const htmlElements = document.querySelectorAll('[data-i18n-html]');\n    htmlElements.forEach(element => {\n        const key = element.getAttribute('data-i18n-html');\n        if (translations[currentLanguage][key]) {\n            element.innerHTML = translations[currentLanguage][key];\n        }\n    });\n}\n\n// 切换语言\nfunction changeLanguage(lang) {\n    currentLanguage = lang;\n    localStorage.setItem('language', lang);\n    updateContent();\n}\n\n// 翻译函数\nfunction t(key, fallback) {\n    return translations[currentLanguage][key] || fallback || key;\n}\n\nconst i18n = {\n    translations,\n    updateContent,\n    switchLanguage: changeLanguage,\n    currentLanguage,\n    t\n};\n\nexport { updateContent, changeLanguage as switchLanguage, currentLanguage, t };\nexport default i18n;\n","/**\n * DeepSeek 客服聊天窗口模块\n * 提供在网站左下角显示的客服聊天功能\n */\n\nimport DeepSeekAPI from './deepseek-api.js';\nimport CryptoUtils from './crypto-utils.js';\nimport i18n from '../../i18n.js';\n\nclass DeepSeekChatWidget {\n    constructor() {\n        this.apiKey = null;\n        this.api = null;\n        this.chatHistory = [];\n        this.isOpen = false;\n         this.isInitialized = false;\n        this.encryptionKey = null; // 将在初始化时从配置文件加载\n        \n        // 创建DOM元素\n        this.createWidgetElements();\n        \n        // 初始化\n        this.initialize();\n    }\n    \n    /**\n     * 初始化聊天窗口\n     */\n    async initialize() {\n        try {\n            // 获取加密的API密钥\n            const encryptedApiKey = window.ENV?.DEEPSEEK_API_KEY_ENCRYPTED;\n            \n            if (!encryptedApiKey) {\n                // 导入API密钥配置\n                const apiKeysConfig = await import('../../../src/config/api-keys.js');\n                \n                // 如果没有加密的API密钥，则从DeepSeekIntegration获取\n                try {\n                    const { DeepSeekIntegration } = await import('./deepseek-integration.js');\n                    const integration = new DeepSeekIntegration();\n                    // 等待初始化完成，确保API密钥已加密并存储在window.ENV中\n                    await new Promise(resolve => setTimeout(resolve, 500));\n                    \n                    // 使用已加密的API密钥\n                    this.apiKey = await CryptoUtils.decrypt(\n                        window.ENV.DEEPSEEK_API_KEY_ENCRYPTED,\n                        apiKeysConfig.default.ENCRYPTION_KEY\n                    );\n                } catch (error) {\n                    console.error('Failed to get API key from DeepSeekIntegration:', error);\n                    throw new Error('API key initialization failed');\n                }\n            } else {\n                // 导入API密钥配置\n                const apiKeysConfig = await import('../../../src/config/api-keys.js');\n                \n                // 解密API密钥\n                this.apiKey = await CryptoUtils.decrypt(encryptedApiKey, apiKeysConfig.default.ENCRYPTION_KEY);\n            }\n            \n            // 初始化API\n            this.api = new DeepSeekAPI(this.apiKey);\n            this.isInitialized = true;\n            \n            console.log(i18n.t('deepseek.logs.initialized', 'DeepSeek 客服聊天窗口已初始化'));\n        } catch (error) {\n            console.error(i18n.t('deepseek.logs.initFailed', '初始化DeepSeek客服聊天窗口失败:'), error);\n            this.showError(i18n.t('deepseek.errors.initFailed', '客服系统初始化失败，请稍后再试'));\n        }\n    }\n    \n    /**\n     * 创建聊天窗口DOM元素\n     */\n    createWidgetElements() {\n        // 创建主容器\n        this.container = document.createElement('div');\n        this.container.className = 'deepseek-chat-widget';\n        // 修改位置到左侧，与CSS保持一致\n        this.container.style.left = '20px';\n        this.container.style.top = '100px';\n        this.container.style.right = 'auto';\n        this.container.style.bottom = 'auto';\n        \n        // 创建聊天按钮\n        this.chatButton = document.createElement('button');\n        this.chatButton.className = 'deepseek-chat-button';\n        this.chatButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path></svg>';\n        this.chatButton.setAttribute('aria-label', i18n.t('deepseek.openChat', '打开客服聊天'));\n        \n        // 创建聊天窗口\n        this.chatWindow = document.createElement('div');\n        this.chatWindow.className = 'deepseek-chat-window';\n        this.chatWindow.style.display = 'none';\n        \n        // 创建聊天窗口头部\n        const header = document.createElement('div');\n        header.className = 'deepseek-chat-header';\n        \n        const title = document.createElement('h3');\n        title.textContent = i18n.t('deepseek.title', '在线客服');\n        \n        const closeButton = document.createElement('button');\n        closeButton.className = 'deepseek-chat-close';\n        closeButton.innerHTML = '&times;';\n        closeButton.setAttribute('aria-label', i18n.t('deepseek.closeChat', '关闭聊天窗口'));\n        \n        header.appendChild(title);\n        header.appendChild(closeButton);\n        \n        // 创建聊天消息区域\n        this.messagesContainer = document.createElement('div');\n        this.messagesContainer.className = 'deepseek-chat-messages';\n        \n        // 添加欢迎消息和引导语\n        const welcomeMessage = document.createElement('div');\n        welcomeMessage.className = 'deepseek-chat-message assistant';\n        welcomeMessage.innerHTML = i18n.t('deepseek.welcomeMessage', '您好！我是AI客服助手，很高兴为您服务。<br><br>您可以咨询以下问题：<br>1. 产品功能与使用方法<br>2. 账户激活与订阅问题<br>3. 技术支持与故障排除<br>4. 付款与发票相关<br><br>请告诉我您需要什么帮助？');\n        this.messagesContainer.appendChild(welcomeMessage);\n        \n        // 创建输入区域\n        const inputArea = document.createElement('div');\n        inputArea.className = 'deepseek-chat-input-area';\n        \n        this.messageInput = document.createElement('textarea');\n        this.messageInput.className = 'deepseek-chat-input';\n        this.messageInput.placeholder = i18n.t('deepseek.inputPlaceholder', '请输入您的问题...');\n        this.messageInput.rows = 1;\n        \n        const sendButton = document.createElement('button');\n        sendButton.className = 'deepseek-chat-send';\n        sendButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>';\n        sendButton.setAttribute('aria-label', i18n.t('deepseek.sendMessage', '发送消息'));\n        \n        inputArea.appendChild(this.messageInput);\n        inputArea.appendChild(sendButton);\n        \n        // 组装聊天窗口\n        this.chatWindow.appendChild(header);\n        this.chatWindow.appendChild(this.messagesContainer);\n        this.chatWindow.appendChild(inputArea);\n        \n        // 添加到主容器\n        this.container.appendChild(this.chatButton);\n        this.container.appendChild(this.chatWindow);\n        \n        // 添加到body\n        document.body.appendChild(this.container);\n        \n        // 添加事件监听\n        this.chatButton.addEventListener('click', () => this.toggleChat());\n        closeButton.addEventListener('click', () => this.toggleChat(false));\n        sendButton.addEventListener('click', () => this.sendMessage());\n        this.messageInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                this.sendMessage();\n            }\n        });\n        \n        // 自动调整输入框高度\n        this.messageInput.addEventListener('input', () => {\n            this.messageInput.style.height = 'auto';\n            this.messageInput.style.height = (this.messageInput.scrollHeight) + 'px';\n        });\n    }\n    \n    /**\n     * 切换聊天窗口显示状态\n     * @param {boolean} [force] 强制设置状态\n     */\n    toggleChat(force) {\n        this.isOpen = force !== undefined ? force : !this.isOpen;\n        this.chatWindow.style.display = this.isOpen ? 'flex' : 'none';\n        \n        if (this.isOpen) {\n            this.messageInput.focus();\n            this.scrollToBottom();\n        }\n    }\n    \n    /**\n     * 发送消息到DeepSeek API\n     */\n    async sendMessage() {\n        const message = this.messageInput.value.trim();\n        if (!message) return;\n        \n        if (!this.isInitialized) {\n            this.showError(i18n.t('deepseek.errors.initializing', '客服系统正在初始化，请稍后再试'));\n            return;\n        }\n        \n        // 清空输入框\n        this.messageInput.value = '';\n        this.messageInput.style.height = 'auto';\n        \n        // 添加用户消息到聊天窗口\n        this.addMessage(message, 'user');\n        \n        // 显示加载状态\n        const loadingId = this.showLoading();\n        \n        try {\n            // 发送请求到DeepSeek API\n            const response = await this.api.chat(message, this.chatHistory);\n            \n            // 移除加载状态\n            this.removeLoading(loadingId);\n            \n            // 添加回复到聊天窗口\n            this.addMessage(response, 'assistant');\n            \n            // 更新聊天历史\n            this.chatHistory.push({ role: 'user', content: message });\n            this.chatHistory.push({ role: 'assistant', content: response });\n            \n            // 如果历史记录太长，删除最早的消息\n            if (this.chatHistory.length > 10) {\n                this.chatHistory = this.chatHistory.slice(this.chatHistory.length - 10);\n            }\n        } catch (error) {\n            console.error('发送消息失败:', error);\n            \n            // 移除加载状态\n            this.removeLoading(loadingId);\n            \n            // 显示错误消息\n            this.showError(i18n.t('deepseek.errors.sendFailed', '消息发送失败，请稍后再试'));\n        }\n    }\n    \n    /**\n     * 添加消息到聊天窗口\n     * @param {string} content 消息内容\n     * @param {string} role 角色 (user/assistant)\n     */\n    addMessage(content, role) {\n        const messageElement = document.createElement('div');\n        messageElement.className = `deepseek-chat-message ${role}`;\n        \n        // 处理可能的markdown内容\n        if (role === 'assistant') {\n            // 简单处理换行和链接\n            content = content\n                .replace(/\\n/g, '<br>')\n                .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\">$1</a>');\n        }\n        \n        messageElement.innerHTML = content;\n        this.messagesContainer.appendChild(messageElement);\n        \n        this.scrollToBottom();\n    }\n    \n    /**\n     * 显示加载状态\n     * @returns {string} 加载状态的唯一ID\n     */\n    showLoading() {\n        const id = 'loading-' + Date.now();\n        const loadingElement = document.createElement('div');\n        loadingElement.className = 'deepseek-chat-message assistant loading';\n        loadingElement.id = id;\n        loadingElement.innerHTML = '<div class=\"typing-indicator\"><span></span><span></span><span></span></div>';\n        \n        this.messagesContainer.appendChild(loadingElement);\n        this.scrollToBottom();\n        \n        return id;\n    }\n    \n    /**\n     * 移除加载状态\n     * @param {string} id 加载状态的唯一ID\n     */\n    removeLoading(id) {\n        const loadingElement = document.getElementById(id);\n        if (loadingElement) {\n            loadingElement.remove();\n        }\n    }\n    \n    /**\n     * 显示错误消息\n     * @param {string} message 错误消息\n     */\n    showError(message) {\n        const errorElement = document.createElement('div');\n        errorElement.className = 'deepseek-chat-message error';\n        errorElement.textContent = message;\n        \n        this.messagesContainer.appendChild(errorElement);\n        this.scrollToBottom();\n        \n        // 5秒后自动移除错误消息\n        setTimeout(() => {\n            errorElement.classList.add('fade-out');\n            setTimeout(() => errorElement.remove(), 500);\n        }, 5000);\n    }\n    \n    /**\n     * 滚动到聊天窗口底部\n     */\n    scrollToBottom() {\n        this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\n    }\n}\n\nexport default DeepSeekChatWidget;","// i18n-manager.js - 国际化管理器\n\n/**\n * 国际化管理类\n * 支持:\n * - 自动检测系统语言\n * - 动态加载语言包\n * - 无感切换语言\n * - 优雅降级\n */\nexport class I18nManager {\n    constructor() {\n        // 检查是否已经存在实例，避免重复初始化\n        if (window.i18nManager instanceof I18nManager) {\n            console.log('I18nManager已经初始化，返回现有实例');\n            return window.i18nManager;\n        }\n        \n        // 当前语言,默认使用系统语言\n        this.currentLanguage = 'zh'; // 默认使用中文，确保初始加载时显示默认内容\n        // 翻译内容缓存\n        this.translations = {};\n        // 语言变化观察者\n        this.observers = new Set();\n        // 后备语言(中文)\n        this.fallbackLanguage = 'zh';\n        // 已加载的语言包记录\n        this.loadedLanguages = new Set();\n        // 日期时间格式化器\n        this.dateTimeFormatter = new Intl.DateTimeFormat();\n        // 初始化状态\n        this.isInitializing = false;\n        this.initializationPromise = null;\n\n        // 立即显示默认内容\n        this.showDefaultContent();\n\n        // 等待DOM加载完成后初始化\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => this.init());\n        } else {\n            this.init();\n        }\n\n        // 增加超时保护时间\n        setTimeout(() => {\n            if (document.documentElement.hasAttribute('data-i18n-loading')) {\n                console.warn('国际化初始化超时，使用默认显示');\n                this.handleInitTimeout();\n            }\n        }, 5000); // 增加超时时间到5秒\n        \n        // 保存实例到全局\n        window.i18nManager = this;\n    }\n\n    /**\n     * 显示默认内容\n     */\n    showDefaultContent() {\n        document.querySelectorAll('[data-i18n]').forEach(element => {\n            const defaultText = element.getAttribute('data-i18n-default');\n            if (defaultText) {\n                if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {\n                    element.placeholder = defaultText;\n                } else {\n                    element.textContent = defaultText;\n                }\n                element.style.visibility = 'visible';\n            }\n        });\n    }\n\n    /**\n     * 处理初始化超时\n     */\n    handleInitTimeout() {\n        this.fallbackToDefault();\n        // 移除加载状态\n        document.documentElement.removeAttribute('data-i18n-loading');\n        // 确保所有元素可见\n        document.querySelectorAll('[data-i18n]').forEach(element => {\n            element.style.visibility = 'visible';\n        });\n    }\n\n    /**\n     * 初始化国际化管理器\n     */\n    async init() {\n        if (this.isInitializing) {\n            return this.initializationPromise;\n        }\n\n        this.isInitializing = true;\n        document.documentElement.setAttribute('data-i18n-loading', 'true');\n\n        this.initializationPromise = (async () => {\n            try {\n                const savedLang = localStorage.getItem('preferredLanguage');\n                const systemLang = this.getSystemLanguage();\n                const initialLang = savedLang || systemLang;\n                \n                // 预加载所有语言包\n                await Promise.all([\n                    this.loadLanguage(initialLang).catch(error => {\n                        console.warn(`${initialLang}语言包加载失败:`, error);\n                        return null;\n                    }),\n                    this.loadLanguage(this.fallbackLanguage).catch(error => {\n                        console.warn(`${this.fallbackLanguage}语言包加载失败:`, error);\n                        return null;\n                    })\n                ]);\n\n                if (this.loadedLanguages.size === 0) {\n                    throw new Error('所有语言包加载失败');\n                }\n\n                // 设置初始语言\n                const targetLang = this.loadedLanguages.has(initialLang) ? initialLang : this.fallbackLanguage;\n                await this.setLanguage(targetLang);\n                this.initSystemLanguageDetection();\n                \n                console.log('I18n initialized:', {\n                    current: this.currentLanguage,\n                    loaded: Array.from(this.loadedLanguages)\n                });\n            } catch (error) {\n                console.error('Failed to initialize i18n:', error);\n                this.fallbackToDefault();\n            } finally {\n                this.isInitializing = false;\n                document.documentElement.removeAttribute('data-i18n-loading');\n                // 确保所有元素可见\n                document.querySelectorAll('[data-i18n]').forEach(element => {\n                    element.style.visibility = 'visible';\n                });\n            }\n        })();\n\n        return this.initializationPromise;\n    }\n\n    /**\n     * 获取系统/浏览器语言\n     * @returns {string} 'zh' 或 'en'\n     */\n    getSystemLanguage() {\n        const systemLang = navigator.language.toLowerCase();\n        // 检查是否为中文语言代码\n        if (systemLang.startsWith('zh')) {\n            return 'zh';\n        }\n        return 'en'; // 默认英语\n    }\n\n    /**\n     * 初始化系统语言检测\n     */\n    initSystemLanguageDetection() {\n        // 监听系统语言变化\n        if (window.languagechange !== undefined) {\n            window.addEventListener('languagechange', () => {\n                const newLang = this.getSystemLanguage();\n                // 仅在用户未手动设置语言时自动切换\n                if (!localStorage.getItem('preferredLanguage')) {\n                    this.setLanguage(newLang);\n                }\n            });\n        }\n    }\n\n    /**\n     * 加载指定语言包\n     * @param {string} lang 语言代码\n     */\n    async loadLanguage(lang) {\n        if (this.loadedLanguages.has(lang)) {\n            return;\n        }\n\n        const maxRetries = 3;\n        const retryDelay = 1000; // 1秒延迟\n\n        for (let attempt = 1; attempt <= maxRetries; attempt++) {\n            try {\n                // 使用相对路径加载语言文件，避免在不同环境下的路径问题\n                const response = await fetch(`./locales/${lang}.json`);\n                if (!response.ok) {\n                    console.warn(`尝试备用路径加载语言包: ${lang}`);\n                    // 尝试备用路径\n                    const backupResponse = await fetch(`../locales/${lang}.json`);\n                    if (!backupResponse.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}, backup status: ${backupResponse.status}`);\n                    }\n                    const translations = await backupResponse.json();\n                    this.translations[lang] = translations;\n                    this.loadedLanguages.add(lang);\n                    console.log(`成功从备用路径加载语言包: ${lang}`);\n                    return;\n                }\n                const translations = await response.json();\n                this.translations[lang] = translations;\n                this.loadedLanguages.add(lang);\n                console.log(`成功加载语言包: ${lang}`);\n                return;\n            } catch (error) {\n                console.warn(`Failed to load language pack: ${lang} (Attempt ${attempt}/${maxRetries})`, error);\n                if (attempt === maxRetries) {\n                    throw error;\n                }\n                await new Promise(resolve => setTimeout(resolve, retryDelay));\n            }\n        }\n    }\n\n    /**\n     * 设置当前语言\n     * @param {string} lang 语言代码\n     */\n    async setLanguage(lang) {\n        try {\n            if (!this.loadedLanguages.has(lang)) {\n                await this.loadLanguage(lang);\n            }\n\n            this.currentLanguage = lang;\n            localStorage.setItem('preferredLanguage', lang);\n            document.documentElement.setAttribute('lang', lang);\n            this.updateAllTranslations();\n            this.notifyObservers();\n        } catch (error) {\n            console.error(`Failed to set language: ${lang}`, error);\n            this.fallbackToDefault();\n        }\n    }\n\n    /**\n     * 更新所有翻译元素\n     */\n    updateAllTranslations() {\n        const elements = document.querySelectorAll('[data-i18n]');\n        elements.forEach(element => {\n            const key = element.getAttribute('data-i18n');\n            const defaultText = element.getAttribute('data-i18n-default');\n            const translation = this.translate(key, defaultText);\n            element.textContent = translation;\n        });\n\n        // 更新占位符文本\n        const placeholderElements = document.querySelectorAll('[data-i18n-placeholder]');\n        placeholderElements.forEach(element => {\n            const key = element.getAttribute('data-i18n-placeholder');\n            const defaultText = element.getAttribute('data-i18n-default-placeholder');\n            const translation = this.translate(key, defaultText);\n            element.setAttribute('placeholder', translation);\n        });\n    }\n\n    /**\n     * 翻译指定键值\n     * @param {string} key 翻译键\n     * @param {string} defaultText 默认文本\n     * @returns {string} 翻译后的文本\n     */\n    translate(key, defaultText) {\n        const translations = this.translations[this.currentLanguage];\n        if (!translations) {\n            return defaultText || key;\n        }\n\n        const keys = key.split('.');\n        let result = translations;\n        for (const k of keys) {\n            if (result && typeof result === 'object') {\n                result = result[k];\n            } else {\n                return defaultText || key;\n            }\n        }\n\n        return result || defaultText || key;\n    }\n\n    /**\n     * 添加语言变化观察者\n     * @param {Function} observer 观察者函数\n     */\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n\n    /**\n     * 移除语言变化观察者\n     * @param {Function} observer 观察者函数\n     */\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n\n    /**\n     * 通知所有观察者语言已变化\n     */\n    notifyObservers() {\n        this.observers.forEach(observer => observer(this.currentLanguage));\n    }\n\n    /**\n     * 处理初始化超时\n     */\n    handleInitTimeout() {\n        this.fallbackToDefault();\n        // 移除加载状态\n        document.documentElement.removeAttribute('data-i18n-loading');\n    }\n\n    /**\n     * 使用默认语言作为后备方案\n     */\n    fallbackToDefault() {\n        this.currentLanguage = this.fallbackLanguage;\n        document.documentElement.setAttribute('lang', this.fallbackLanguage);\n        // 使用默认文本显示\n        const elements = document.querySelectorAll('[data-i18n]');\n        elements.forEach(element => {\n            const defaultText = element.getAttribute('data-i18n-default');\n            if (defaultText) {\n                element.textContent = defaultText;\n            }\n        });\n    }\n}\n\n// 创建单例实例\nconst i18nManager = new I18nManager();\nexport default i18nManager;\n","// UI 反馈模块\nclass UIFeedback {\n  constructor() {\n    this.toastContainer = this.createToastContainer();\n    this.loadingOverlay = this.createLoadingOverlay();\n    document.body.appendChild(this.toastContainer);\n    document.body.appendChild(this.loadingOverlay);\n  }\n\n  // 创建 Toast 容器\n  createToastContainer() {\n    const container = document.createElement('div');\n    container.className = 'toast-container';\n    return container;\n  }\n\n  // 创建加载遮罩\n  createLoadingOverlay() {\n    const overlay = document.createElement('div');\n    overlay.className = 'loading-overlay';\n    overlay.innerHTML = `\n      <div class=\"loading-spinner\">\n        <div class=\"spinner\"></div>\n        <div class=\"loading-text\">加载中...</div>\n      </div>\n    `;\n    overlay.style.display = 'none';\n    return overlay;\n  }\n\n  // 显示 Toast 消息\n  showToast(message, type = 'info', duration = 3000) {\n    const toast = document.createElement('div');\n    toast.className = `toast toast-${type}`;\n    toast.innerHTML = `\n      <div class=\"toast-icon\">${this.getToastIcon(type)}</div>\n      <div class=\"toast-message\">${message}</div>\n    `;\n\n    this.toastContainer.appendChild(toast);\n\n    // 动画效果\n    requestAnimationFrame(() => {\n      toast.classList.add('show');\n    });\n\n    // 自动关闭\n    setTimeout(() => {\n      toast.classList.remove('show');\n      setTimeout(() => {\n        this.toastContainer.removeChild(toast);\n      }, 300);\n    }, duration);\n  }\n\n  // 获取 Toast 图标\n  getToastIcon(type) {\n    const icons = {\n      success: '<svg>...</svg>', // 成功图标\n      error: '<svg>...</svg>',   // 错误图标\n      warning: '<svg>...</svg>', // 警告图标\n      info: '<svg>...</svg>'     // 信息图标\n    };\n    return icons[type] || icons.info;\n  }\n\n  // 显示加载状态\n  showLoading(message = '加载中...') {\n    this.loadingOverlay.querySelector('.loading-text').textContent = message;\n    this.loadingOverlay.style.display = 'flex';\n    document.body.style.overflow = 'hidden';\n  }\n\n  // 隐藏加载状态\n  hideLoading() {\n    this.loadingOverlay.style.display = 'none';\n    document.body.style.overflow = '';\n  }\n\n  // 显示确认对话框\n  async showConfirm(options) {\n    return new Promise((resolve) => {\n      const dialog = document.createElement('div');\n      dialog.className = 'dialog-overlay';\n      dialog.innerHTML = `\n        <div class=\"dialog\">\n          <h3 class=\"dialog-title\">${options.title || '确认'}</h3>\n          <div class=\"dialog-content\">${options.message}</div>\n          <div class=\"dialog-buttons\">\n            <button class=\"btn btn-secondary\" data-action=\"cancel\">\n              ${options.cancelText || '取消'}\n            </button>\n            <button class=\"btn btn-primary\" data-action=\"confirm\">\n              ${options.confirmText || '确认'}\n            </button>\n          </div>\n        </div>\n      `;\n\n      const handleClick = (e) => {\n        const action = e.target.dataset.action;\n        if (action) {\n          dialog.remove();\n          resolve(action === 'confirm');\n        }\n      };\n\n      dialog.addEventListener('click', handleClick);\n      document.body.appendChild(dialog);\n    });\n  }\n\n  // 显示进度条\n  showProgress(options = {}) {\n    const progress = document.createElement('div');\n    progress.className = 'progress-bar';\n    progress.innerHTML = `\n      <div class=\"progress-track\">\n        <div class=\"progress-fill\"></div>\n      </div>\n      <div class=\"progress-text\">0%</div>\n    `;\n\n    const fill = progress.querySelector('.progress-fill');\n    const text = progress.querySelector('.progress-text');\n\n    let currentProgress = 0;\n    const targetProgress = options.progress || 0;\n    const duration = options.duration || 300;\n    const startTime = performance.now();\n\n    const animate = (currentTime) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      currentProgress = targetProgress * progress;\n      fill.style.width = `${currentProgress}%`;\n      text.textContent = `${Math.round(currentProgress)}%`;\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    requestAnimationFrame(animate);\n    return progress;\n  }\n}\n\nexport const uiFeedback = new UIFeedback();\nexport default uiFeedback;\n","// 语言切换器组件\nimport i18nManager from '../modules/i18n-manager.js';\nimport { uiFeedback } from '../modules/ui-feedback.js';\n\nclass LanguageSwitcher {\n    constructor() {\n        this.container = document.querySelector('.language-switcher');\n        this.buttons = new Map();\n        this.init();\n    }\n\n    init() {\n        // 初始化语言切换按钮\n        this.container.querySelectorAll('button[data-lang]').forEach(button => {\n            const lang = button.getAttribute('data-lang');\n            this.buttons.set(lang, button);\n            button.addEventListener('click', () => this.switchLanguage(lang));\n        });\n\n        // 设置初始状态\n        this.updateButtonStates(i18nManager.currentLanguage);\n\n        // 监听系统语言变化\n        i18nManager.addObserver(this.updateButtonStates.bind(this));\n\n        // 添加键盘导航支持\n        this.setupKeyboardNavigation();\n\n        // 添加系统语言变化监听\n        if (window.languagechange !== undefined) {\n            window.addEventListener('languagechange', () => {\n                const systemLang = i18nManager.getSystemLanguage();\n                if (!localStorage.getItem('preferredLanguage')) {\n                    // 只在用户没有设置偏好语言时跟随系统\n                    this.switchLanguage(systemLang, true);\n                }\n            });\n        }\n    }\n\n    /**\n     * 切换语言\n     * @param {string} lang - 目标语言\n     * @param {boolean} [isSystemChange=false] - 是否是系统触发的变化\n     */\n    async switchLanguage(lang, isSystemChange = false) {\n        // 获取目标语言按钮\n        const button = this.buttons.get(lang);\n        if (!button) {\n            console.error('Language button not found:', lang);\n            return;\n        }\n\n        // 禁用所有按钮\n        this.buttons.forEach(btn => btn.disabled = true);\n\n        try {\n            // 显示加载状态\n            button.classList.add('is-loading');\n            \n            // 尝试切换语言\n            await i18nManager.setLanguage(lang);\n\n            // 成功切换后更新UI\n            this.updateButtonStates(lang);\n            \n            if (!isSystemChange) {\n                // 显示成功提示\n                uiFeedback.showToast(\n                    i18nManager.translate('messages.languageChanged', '语言已切换'),\n                    'success'\n                );\n            }\n\n        } catch (error) {\n            console.error('Failed to switch language:', error);\n            \n            // 显示错误提示\n            uiFeedback.showToast(\n                i18nManager.translate('messages.languageChangeFailed', '语言切换失败'),\n                'error'\n            );\n\n        } finally {\n            // 恢复所有按钮状态\n            this.buttons.forEach(btn => {\n                btn.disabled = false;\n                btn.classList.remove('is-loading');\n            });\n        }\n    }\n\n    /**\n     * 更新所有语言按钮状态\n     * @param {string} currentLang - 当前语言\n     */\n    updateButtonStates(currentLang) {\n        this.buttons.forEach((button, lang) => {\n            const isActive = lang === currentLang;\n            \n            // 更新按钮状态\n            button.setAttribute('aria-pressed', isActive.toString());\n            button.classList.toggle('active', isActive);\n            \n            try {\n                // 更新无障碍标签\n                const labelKey = isActive ? 'currentLanguage' : 'switchTo';\n                const language = i18nManager.translate(`languages.${lang}`, lang);\n                const ariaLabel = i18nManager.translate(`accessibility.${labelKey}`, labelKey === 'currentLanguage' ? '当前语言' : '切换到');\n                if (ariaLabel) {\n                    button.setAttribute('aria-label', `${ariaLabel}: ${language}`);\n                }\n\n                // 更新按钮文本\n                const buttonText = i18nManager.translate(`languages.${lang}`, lang.toUpperCase());\n                button.textContent = buttonText;\n            } catch (error) {\n                console.warn('Failed to update button text:', error);\n                // 使用默认显示\n                const defaultText = button.getAttribute('data-i18n-default');\n                if (defaultText) {\n                    button.textContent = defaultText;\n                }\n            }\n        });\n    }\n\n    /**\n     * 设置键盘导航\n     */\n    setupKeyboardNavigation() {\n        const buttons = Array.from(this.buttons.values());\n        let currentIndex = -1;\n\n        this.container.addEventListener('keydown', (event) => {\n            switch (event.key) {\n                case 'ArrowRight':\n                case 'ArrowDown':\n                    event.preventDefault();\n                    currentIndex = (currentIndex + 1) % buttons.length;\n                    buttons[currentIndex].focus();\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowUp':\n                    event.preventDefault();\n                    currentIndex = (currentIndex - 1 + buttons.length) % buttons.length;\n                    buttons[currentIndex].focus();\n                    break;\n\n                case 'Home':\n                    event.preventDefault();\n                    currentIndex = 0;\n                    buttons[currentIndex].focus();\n                    break;\n\n                case 'End':\n                    event.preventDefault();\n                    currentIndex = buttons.length - 1;\n                    buttons[currentIndex].focus();\n                    break;\n            }\n        });\n    }\n}\n\n// 创建并导出语言切换器实例\nexport const languageSwitcher = new LanguageSwitcher();\nexport default languageSwitcher;\n","// 广告管理器\nclass AdManager {\n    constructor() {\n        this.platforms = {\n            google: false,\n            baidu: false,\n            alimama: false,\n            jd: false,\n            pdd: false\n        };\n        this.stats = {\n            impressions: {},\n            clicks: {},\n            revenue: {}\n        };\n        this.retryAttempts = 3;\n        this.retryDelay = 1000; // 1秒\n        this.init();\n    }\n\n    init() {\n        // 加载必要的SDK\n        this.loadSDKs();\n        // 初始化统计\n        this.initTracking();\n        // 加载保存的统计数据\n        this.loadStats();\n        // 添加错误监听\n        this.setupErrorHandling();\n    }\n\n    setupErrorHandling() {\n        window.addEventListener('error', (event) => {\n            if (event.message.includes('adsbygoogle')) {\n                console.error('AdSense error:', event);\n                this.handleAdError('google', event);\n            }\n        });\n    }\n\n    async loadSDKs() {\n        try {\n            // Google AdSense\n            await this.loadScript({\n                src: 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4468142418161903',\n                async: true,\n                crossOrigin: 'anonymous'\n            });\n            this.platforms.google = true;\n        } catch (error) {\n            console.error('Failed to load Google AdSense:', error);\n            this.handleAdError('google', error);\n        }\n    }\n\n    loadScript(config) {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.async = config.async;\n            script.src = config.src;\n            if (config.crossOrigin) {\n                script.crossOrigin = config.crossOrigin;\n            }\n\n            script.onload = () => resolve();\n            script.onerror = (error) => reject(error);\n\n            document.head.appendChild(script);\n        });\n    }\n\n    initTracking() {\n        // 初始化统计数据\n        const platforms = ['google', 'baidu', 'alimama', 'jd', 'pdd'];\n        platforms.forEach(platform => {\n            this.stats.impressions[platform] = 0;\n            this.stats.clicks[platform] = 0;\n            this.stats.revenue[platform] = 0;\n        });\n    }\n\n    handleAdError(platform, error) {\n        // 记录错误\n        console.error(`${platform} ad error:`, error);\n        \n        // 发送错误报告\n        this.sendTrackingData({\n            type: 'error',\n            platform,\n            error: error.message,\n            timestamp: new Date().getTime()\n        });\n\n        // 如果是配置错误，禁用该平台\n        if (error.message.includes('configuration')) {\n            this.platforms[platform] = false;\n        }\n    }\n\n    trackImpression(platform, position) {\n        if (!this.platforms[platform]) return;\n\n        this.stats.impressions[platform]++;\n        this.saveStats();\n        \n        // 发送统计请求到服务器\n        this.sendTrackingData({\n            type: 'impression',\n            platform,\n            position,\n            timestamp: new Date().getTime()\n        });\n    }\n\n    trackClick(platform, position) {\n        if (!this.platforms[platform]) return;\n\n        this.stats.clicks[platform]++;\n        this.saveStats();\n\n        // 发送统计请求到服务器\n        this.sendTrackingData({\n            type: 'click',\n            platform,\n            position,\n            timestamp: new Date().getTime()\n        });\n    }\n\n    async sendTrackingData(data) {\n        try {\n            const response = await fetch('/api/track', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ...data,\n                    url: window.location.href,\n                    userAgent: navigator.userAgent\n                })\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('Failed to send tracking data:', error);\n            // 保存到本地，稍后重试\n            this.queueFailedTrackingData(data);\n        }\n    }\n\n    queueFailedTrackingData(data) {\n        const queue = JSON.parse(localStorage.getItem('adTrackingQueue') || '[]');\n        queue.push(data);\n        localStorage.setItem('adTrackingQueue', JSON.stringify(queue));\n    }\n\n    retryFailedTracking() {\n        const queue = JSON.parse(localStorage.getItem('adTrackingQueue') || '[]');\n        if (queue.length === 0) return;\n\n        // 重试发送失败的统计数据\n        const retryData = queue.shift();\n        this.sendTrackingData(retryData)\n            .then(() => {\n                localStorage.setItem('adTrackingQueue', JSON.stringify(queue));\n            })\n            .catch(() => {\n                // 如果还是失败，把数据放回队列\n                queue.push(retryData);\n                localStorage.setItem('adTrackingQueue', JSON.stringify(queue));\n            });\n    }\n\n    saveStats() {\n        localStorage.setItem('adStats', JSON.stringify(this.stats));\n    }\n\n    loadStats() {\n        const savedStats = localStorage.getItem('adStats');\n        if (savedStats) {\n            this.stats = JSON.parse(savedStats);\n        }\n    }\n\n    // Google AdSense\n    async createGoogleAd(container, format = 'auto') {\n        if (!this.platforms.google) {\n            console.warn('Google AdSense is not available');\n            return;\n        }\n\n        const ins = document.createElement('ins');\n        ins.className = 'adsbygoogle';\n        ins.style.display = 'block';\n        ins.dataset.adClient = 'ca-pub-4468142418161903';\n        ins.dataset.adFormat = format;\n        ins.dataset.fullWidthResponsive = 'true';\n        \n        container.appendChild(ins);\n        \n        try {\n            (adsbygoogle = window.adsbygoogle || []).push({});\n            this.trackImpression('google', container.id);\n        } catch (error) {\n            this.handleAdError('google', error);\n            this.tryAlternativeAd(container);\n        }\n    }\n\n    tryAlternativeAd(container) {\n        // 如果Google广告失败，尝试其他平台的广告\n        if (this.platforms.baidu) {\n            this.createBaiduAd(container);\n        }\n    }\n\n    createAd(platform, container, options = {}) {\n        // 检查平台是否可用\n        if (!this.platforms[platform]) {\n            console.warn(`${platform} ads are not available`);\n            return;\n        }\n\n        switch (platform) {\n            case 'google':\n                this.createGoogleAd(container, options.format);\n                break;\n            default:\n                console.error('Unknown platform:', platform);\n        }\n    }\n\n    // 性能监控\n    measureAdPerformance(platform, containerId) {\n        const startTime = performance.now();\n        \n        // 创建性能观察者\n        const observer = new PerformanceObserver((list) => {\n            const entries = list.getEntries();\n            entries.forEach((entry) => {\n                if (entry.name.includes('adsbygoogle')) {\n                    const loadTime = entry.duration;\n                    this.sendTrackingData({\n                        type: 'performance',\n                        platform,\n                        containerId,\n                        loadTime,\n                        timestamp: new Date().getTime()\n                    });\n                }\n            });\n        });\n\n        // 观察资源加载时间\n        observer.observe({ entryTypes: ['resource'] });\n\n        return () => {\n            observer.disconnect();\n            const totalTime = performance.now() - startTime;\n            return totalTime;\n        };\n    }\n}\n\n// 导出广告管理器实例\nwindow.adManager = new AdManager();\n"],"file":"assets/ad-manager-nkcXdfJJ.js"}