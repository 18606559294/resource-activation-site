const e=new IntersectionObserver((e=>{e.forEach((e=>{if(e.isIntersecting&&(e.target.classList.add("visible"),e.target.classList.contains("stagger-animation"))){const t=e.target.children;Array.from(t).forEach(((e,t)=>{setTimeout((()=>{e.classList.add("animate-float-up")}),100*t)}))}}))}),{root:null,rootMargin:"0px",threshold:.1});document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll(".scroll-reveal, .stagger-animation").forEach((t=>e.observe(t)))})),document.addEventListener("click",(e=>{if(e.target.classList.contains("click-effect")){const t=document.createElement("div");t.classList.add("ripple"),e.target.appendChild(t);const n=e.target.getBoundingClientRect(),o=Math.max(n.width,n.height);t.style.width=t.style.height=`${o}px`;const a=e.clientX-n.left-o/2,s=e.clientY-n.top-o/2;t.style.left=`${a}px`,t.style.top=`${s}px`,t.addEventListener("animationend",(()=>{t.remove()}))}}));document.querySelectorAll(".card-3d").forEach((e=>{e.addEventListener("mousemove",(t=>{const n=e.getBoundingClientRect(),o=t.clientX-n.left,a=t.clientY-n.top,s=n.width/2,i=(a-n.height/2)/10,r=-(o-s)/10;e.style.transform=`perspective(1000px) rotateX(${i}deg) rotateY(${r}deg)`})),e.addEventListener("mouseleave",(()=>{e.style.transform="perspective(1000px) rotateX(0) rotateY(0)"}))})),window.addEventListener("load",(()=>{document.body.classList.add("loaded");const e=document.querySelector(".loading");e&&(e.style.opacity="0",setTimeout((()=>{e.style.display="none"}),500))}));
//# sourceMappingURL=animations-CMpsafd9.js.map
